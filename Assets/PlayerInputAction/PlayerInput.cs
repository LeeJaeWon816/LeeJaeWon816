//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/PlayerInputAction/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public class PlayerMove : MonoBehaviour
{
    //기본 변수
    Rigidbody2D rb;
    float moveSpeed = 3;
    float runSpeed = 5;

    //InputAction에서 move값을 받아줄 Vector2입니다.
    Vector2 movement;

    //InputAction으로 생성된 스크립트 변수입니다.
    Move testinput;


    private void Awake()
    {
        //InputAction을 사용하기 위해 만든 스크립트 변수를 초기화 해줍니다.
        testinput = new Move();

        rb = GetComponent<Rigidbody2D>();
    }

    private void Start()
    {
        //메서드를 이벤트핸들러를 통해 InputAction에 등록합니다.
        //이부분은 람다식을 통해 등록했습니다.
        testinput.Move.Run.performed += _ => StartRun();

        //StopRun의 경우 정확히는 StopRun(context)입니다. (context)이 생략되어있습니다.
        testinput.Move.Run.canceled += StopRun;
    }

    // PlayerMove라는 이 스크립트가 활성화 되면, testinput이라는 InputAction과 연동된 스크립트를 초기화하고
    // 미리 지정해준 EventHandler를 등록합니다. 
    // 이 부분이 없다면 작동하지 않습니다.
    private void OnEnable()
    {
        testinput.Enable();
    }

    // 업데이트를 통해 InputAction에서 지정한 WASD의 값이 입력되면 인식하게됩니다.
    private void Update()
    {
        TestPInput();
    }

    // 업데이트를 통해 인신되어 전달받은 movement값을 통해 FixedUpdate를 이용해서 움직임을 구현합니다.
    private void FixedUpdate()
    {
        Move();
    }


    private void StartRun()
    {
        moveSpeed += runSpeed;
    }

    private void StopRun(InputAction.CallbackContext context)
    {
        moveSpeed -= runSpeed;
    }
    //Update를 통해 관리하고있습니다. 입력값이 변경되면, movemet 값도 변경됩니다.
    private void TestPInput()
    {
        movement = testinput.Move.Move.ReadValue<Vector2>();
    }

    private void Move()
    {
        //RigidBody2D를 통해 움직임을 구현합니다. FixedUpdate를 이용하믕로 DeltaTime이 아니라 
        //fixedDeltaTime을 사용합니다.
        rb.MovePosition(rb.position + movement * moveSpeed * Time.fixedDeltaTime);
    }
}
